name: Version Bump on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  version-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check if PR has tags
        id: check_tags
        run: |
          # Get the commits in this PR
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          
          # Check if any commits in the PR range have tags
          TAGS=$(git tag --points-at $HEAD_SHA)
          
          if [ -z "$TAGS" ]; then
            echo "has_tags=false" >> $GITHUB_OUTPUT
          else
            echo "has_tags=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Get current version
        if: steps.check_tags.outputs.has_tags == 'false'
        id: get_version
        run: |
          # Extract version from test.toc
          CURRENT_VERSION=$(grep "## Version:" src/test.toc | sed 's/## Version: //')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Parse version components
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"
          
          # Bump patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
      
      - name: Update version in TOC file
        if: steps.check_tags.outputs.has_tags == 'false'
        run: |
          NEW_VERSION="${{ steps.get_version.outputs.new_version }}"
          sed -i "s/## Version: .*/## Version: $NEW_VERSION/" src/test.toc
      
      - name: Commit and tag
        if: steps.check_tags.outputs.has_tags == 'false'
        run: |
          NEW_VERSION="${{ steps.get_version.outputs.new_version }}"
          
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add src/test.toc
          git commit -m "Bump version to $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"
