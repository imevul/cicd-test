name: Version Bump on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

env:
  TOC_FILE: src/test.toc

jobs:
  version-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Check if PR has tags
        id: check_tags
        run: |
          # Get the head commit SHA
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"

          # Check if the head commit has any tags
          TAGS=$(git tag --points-at "$HEAD_SHA")

          if [ -z "$TAGS" ]; then
            echo "has_tags=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_tags=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Bump version and create tag
        if: steps.check_tags.outputs.has_tags == 'false'
        id: bump_version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          DEFAULT_BUMP: patch
          WITH_V: true
          RELEASE_BRANCHES: main

      - name: Update version in TOC file
        if: steps.check_tags.outputs.has_tags == 'false'
        run: |
          # Get the new version without the 'v' prefix
          NEW_VERSION="${{ steps.bump_version.outputs.new_tag }}"
          NEW_VERSION="${NEW_VERSION#v}"
          
          # Update the version in the TOC file
          sed -i "s/^## Version: .*$/## Version: $NEW_VERSION/" ${{ env.TOC_FILE }}

      - name: Commit TOC file update
        if: steps.check_tags.outputs.has_tags == 'false'
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_tag }}"
          NEW_VERSION="${NEW_VERSION#v}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add ${{ env.TOC_FILE }}
          git commit -m "Update TOC version to $NEW_VERSION [skip ci]"
          git push origin main
